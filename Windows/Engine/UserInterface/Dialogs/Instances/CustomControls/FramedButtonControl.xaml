<Button x:Class="Org.InCommon.InCert.Engine.UserInterface.Dialogs.Instances.CustomControls.FramedButtonControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:contentModels="clr-namespace:Org.InCommon.InCert.Engine.UserInterface.Dialogs.Models.Mockup.ContentModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=contentModels:MockFramedButtonModel, IsDesignTimeCreatable=True}"
        d:DesignHeight="{Binding Width}" d:DesignWidth="{Binding Height}"
        Style="{Binding Path=Style}"
        Background="{Binding Background}"
        Width="{Binding Width}"
        Height ="{Binding Height}"
        BorderThickness="{Binding BorderSize}"
        IsDefault="{Binding IsDefaultButton}"
        IsCancel="{Binding IsCancelButton}"
        BorderBrush="{Binding BorderBrush}"
        IsEnabled="{Binding Enabled}"
        HorizontalAlignment="{Binding HorizontalAlignment}"
        Foreground="{Binding TextBrush}"
        DockPanel.Dock="{Binding Dock}">

    <Grid>
        <StackPanel Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Image DataContext="{Binding ButtonImage}">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="VerticalAlignment" Value="{Binding VerticalAlignment}" />
                        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalAlignment}" />
                        <Setter Property="Margin" Value="{Binding Margin}" />
                        <Setter Property="Source" Value="{Binding ImageSource}"/>
                        <Setter Property="Height" Value="{Binding ImageSource.Height}" />
                        <Setter Property="Width" Value="{Binding ImageSource.Width}" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="{Binding MouseOverImageSource}"/>
                                <Setter Property="Height" Value="{Binding MouseOverImageSource.Height}" />
                                <Setter Property="Width" Value="{Binding MouseOverImageSource.Width}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <TextBlock 
            DataContext="{Binding Caption}" 
            TextWrapping="Wrap" 
            Text="{Binding Value}" 
            FontSize="{Binding FontSize}" 
            FontFamily="{Binding FontFamily}" 
            HorizontalAlignment="{Binding HorizontalAlignment}" 
            VerticalAlignment="{Binding VerticalAlignment}"
            Margin="{Binding Margin}"
            Padding="{Binding Padding}"
            FontWeight="{Binding FontWeight}" 
            Style ="{Binding Style}"
            Visibility="{Binding Visibility}"
            />

            <TextBlock 
            DataContext="{Binding SubCaption}" 
            TextWrapping="Wrap"
            Text="{Binding Value}"
            FontSize="{Binding FontSize}"
            FontFamily="{Binding FontFamily}"
            HorizontalAlignment="{Binding HorizontalAlignment}" 
            VerticalAlignment="{Binding VerticalAlignment}"
            Margin="{Binding Margin}"
            Padding="{Binding Padding}"
            FontWeight="{Binding FontWeight}"
            Style ="{Binding Style}"
            Visibility="{Binding Visibility}"
            />
        </StackPanel>
    </Grid>
    
</Button>
